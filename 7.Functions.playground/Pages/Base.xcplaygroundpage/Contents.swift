/*
 функция - блок кода для выполнения определенной задачи

 желательно, чтобы функция выполняла только свою работу (но дополнительно может вызывать другие функции)

 - параметры (внешние - метка при вызове, внутренние - используются внутри функции, хотя по факту это одни и те же переменные)

 
 по сравнению с Java - функции в Swift имеют больше возможностей
 
 */


// объявление функции без параметров и типа возвращаемого значения
func printReady(){
    print("ready")
}

// вызов функции
printReady()




// функция с параметрами 
func sendParam(str: String, index: Int){// параметры являются константами по-умолчанию, поэтому в них не могут быть присвоены другие значения
    // str="new value" // ошибка (если хотите создать копию значения параметра - создайте новую переменную через var)
    print("\(str),\(index)")
}

// при вызове нужно обязательно указывать имена параметров 
sendParam(str: "test", index: 12)


// функция с возвратом результата (может возвращать любой тип, в том числе и другую функцию)
func sum(int1: Int, int2: Int) -> Int{
    return int1+int2;
}


sum(int1: 2, int2: 5)



// другие записи функций, которые не возвращают результат (пустой кортеж: public typealias Void = ())
func returnVoid() -> Void{
    print("void1")
}

func returnVoid2() -> (){
    print("void2")
}

func returnVoid3(){
    print("void3")
}


// рекомендуется использовать  Void  вместо (), повышается чтение кода, когда рядом много других скобок

returnVoid()
returnVoid2()











