
// optional binding - опциональная привязка - это проверка на nil перед использованием Optional-переменной (контейнера) и, если не пусто, извлекаем в константу либо в переменную
// самый безопасный способ работы с Optional


var word:String? = "text" // по-умолчанию присваивается значение nil (если ничего не указано)
var a:Int? = 5



// вместо let можно использовать var, если значение будет изменяться

if let a = a{ // попытка извлечь значение и записать его в константу, которая доступна только внутри тела if. Если a равно nil, блок if не выполнится
    print(a+5)
}

// левая константа "а" - это распакованный вариант правого контенера "а"
if let a = a, let word = word{ // если одно из значений равно nil - все выражение равно false (if не выполнится)
    print("let: \(a), \(word)")
}


// использование переменной вместо константы

//if let a = a{
//    a = 6 // нельзя, т.к. константа
//}

if var a = a{
    a = 6 // можно
}


// если нет необходимости извлекать значение, а просто нужно проверить на пустоту - можно использовать стандартный вариант  проверка на nil

if a != nil{ // ! если написать a1!=nil - будет ошибка, т.к. ! стоит сразу после a1 (попытка извлечь значение) - поэтому всегда старайтесь ставить пробел между равно, не равно и пр.

// если надо будет извлекать значение - придется делать это отдельно
    print("\(a!) not nil")

}


// coalescing (значение по-умолчанию)
var nullValue: Int?

var mainValue = nullValue ?? 0 // если nil, то присвоится 0


